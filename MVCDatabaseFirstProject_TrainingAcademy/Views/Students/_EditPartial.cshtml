@model MVCDatabaseFirstProject_TrainingAcademy.Models.ViewModel.StudentViewModel

@using (Html.BeginForm("Create", "Students", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="col-md-12 mx-auto">
        <h2>Update Student</h2>
        @Html.HiddenFor(model => model.StudentId)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group mb-3">
            @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group mb-3">
            @Html.LabelFor(model => model.AdmissionDate, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.AdmissionDate, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
            @Html.ValidationMessageFor(model => model.AdmissionDate, "", new { @class = "text-danger" })
        </div>
        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
       
        <div class="form-group mb-3">
            @Html.LabelFor(model => model.TrainingId, htmlAttributes: new { @class = "form-label" })
            @Html.DropDownListFor(model => model.TrainingId, new SelectList(ViewBag.Trainings, "TrainingId", "TrainingName"), "Select Training", new { @class = "form-select " })
            @Html.ValidationMessageFor(model => model.TrainingId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group mb-3">
            @Html.LabelFor(model => model.TrainerId, htmlAttributes: new { @class = "form-label" })
            @Html.DropDownListFor(model => model.TrainerId, new SelectList(ViewBag.Trainers, "TrainerId", "TrainerName"), "Select Trainer", new { @class = "form-select " })
            @Html.ValidationMessageFor(model => model.TrainerId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group mb-3 ">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "form-label mb-3" })<br />
            <img src="@Url.Content(Model.ImageUrl)" alt="@Model.ImageName" height="80" width="80" class="changeEdit" />
            <input type="file" id="imageChange1" name="ImageFile" class="form-control imageChange" />
        </div>

        <div class="form-group mb-3">
            <input type="submit" value="Update" class="btn btn-lg btn-info" />
        </div>
        @Html.ActionLink("Return To List", "Index")
    </div>
}

@*<link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />*@
<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/moment.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
<script src="~/Scripts/CustomScript.js"></script>


<script>
    $(function () {
        $('.imageChange').change(function () {
            var input = this;
            if (input.files) {
                var rdr = new FileReader();
                rdr.onload = function (e) {
                    $('.changeEdit').attr('src', e.target.result);
                }
                rdr.readAsDataURL(input.files[0]);
            }
        })
    })
</script>



